<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.mycompany</groupId>
    <artifactId>LOSALAMOS</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>
    <name>LOSALAMOSKJzz-1.0-SNAPSHOT</name>
    
    <properties>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <endorsed.dir>${project.build.directory}/endorsed</endorsed.dir>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <failOnMissingWebXml>false</failOnMissingWebXml>
        <jakartaee>8.0.0</jakartaee>
    </properties>
    
    <dependencies>
        <dependency>
            <!-- Dependencia para Jakarta EE, proporciona las APIs de Jakarta EE que son utilizadas en aplicaciones empresariales.
            La versión de Jakarta EE está configurada a través de la propiedad ${jakartaee}. 
            Se marca como 'provided' porque generalmente la implementación del contenedor de Jakarta EE (como Payara o GlassFish)
            ya proporciona estas clases, no es necesario incluirlas en el WAR/JAR final. -->
            <groupId>jakarta.platform</groupId>
            <artifactId>jakarta.jakartaee-api</artifactId>
            <version>${jakartaee}</version>
            <scope>provided</scope>
        </dependency>
        <!-- Dependencia para el conector de MySQL, que permite a la aplicación Java interactuar con bases de datos MySQL.
        En este caso, la versión especificada es 8.0.33. -->
        <!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>8.0.33</version>
        </dependency>
        
        
        <!-- Dependencia de JSTL (JavaServer Pages Standard Tag Library), que proporciona una serie de etiquetas estándar para 
        simplificar el desarrollo de páginas JSP. La versión utilizada es la 1.2. -->
        <!-- https://mvnrepository.com/artifact/jstl/jstl -->
        <dependency>
            <groupId>jstl</groupId>
            <artifactId>jstl</artifactId>
            <version>1.2</version>
        </dependency>
        
        
        
        
        <!-- Dependencia de Apache POI, que permite leer y escribir documentos de Microsoft Office como Excel, Word, etc. -->

        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>5.2.3</version>
        </dependency>
        <!-- Dependencia de Apache Commons Lang, que proporciona clases adicionales para manipular cadenas, fechas, 
        colecciones, etc. La versión especificada es la 3.12.0. -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.12.0</version>
        </dependency>

        <!-- Dependencia de Logback Classic, una implementación moderna de la API de logging de SLF4J. La versión especificada 
        es la 1.4.11, y se utiliza para gestionar el registro de eventos y errores en la aplicación. -->
         

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.4.11</version>
        </dependency>
        
        
        <!-- Dependencia de Logback Core, necesaria para que la implementación de Logback funcione correctamente. -->

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
            <version>1.4.11</version>
        </dependency>
        
        
        <!-- Dependencia de Mockito Core, para realizar pruebas unitarias usando la biblioteca de mockeo Mockito, la versión 4.5.1
        se utiliza para simular comportamientos en los tests. Se marca como 'test' porque solo es necesaria en el entorno de pruebas. -->
        
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>4.5.1</version>
            <scope>test</scope>
        </dependency>
        
        
        
        <!-- Dependencia para Mockito con JUnit Jupiter, utilizada para integrar Mockito con JUnit 5. -->

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>4.5.1</version>
        </dependency>
        
        
        <!-- Dependencia de JUnit 5 para pruebas unitarias. JUnit 5 es el framework de pruebas más reciente, y la versión 5.11.3 
        se usa para definir los tests. También se marca como 'test' ya que solo se necesita en las pruebas. -->
        
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>5.11.3</version>
            <scope>test</scope>
            <type>jar</type>
        </dependency>
        
        <!-- Dependencia de JUnit 4, usada en proyectos donde se utiliza la versión anterior de JUnit, 4.13.2. También es de 'test' scope. -->

        
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13.2</version>
            <scope>test</scope>
        </dependency>
        
        
        <!-- Dependencia de Hamcrest, que es una biblioteca utilizada junto con JUnit para realizar aserciones más legibles y poderosas
        en las pruebas. La versión utilizada es la 1.3. -->
        
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-core</artifactId>
            <version>1.3</version>
            <scope>test</scope>
        </dependency>
        
        
        <!-- Dependencia para trabajar con el API de correo de Java, se utiliza para enviar correos electrónicos desde la aplicación. -->

        <dependency>
            <groupId>javax.mail</groupId>
            <artifactId>javax.mail-api</artifactId>
            <version>1.6.2</version>
        </dependency>
        
        
        <!-- Dependencia para la implementación de javax.mail en Java. Esta es la implementación de la API de correo JavaMail. -->

        <dependency>
            <groupId>com.sun.mail</groupId>
            <artifactId>javax.mail</artifactId>
            <version>1.6.2</version>
        </dependency>


    </dependencies>
    
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <compilerArguments>
                        <endorseddirs>${endorsed.dir}</endorseddirs>
                    </compilerArguments>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.3.1</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${endorsed.dir}</outputDirectory>
                            <silent>true</silent>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>jakarta.platform</groupId>
                                    <artifactId>jakarta.jakartaee-api</artifactId>
                                    <version>${jakartaee}</version>
                                    <type>jar</type>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M7</version>
                <configuration>
                    <skipTests>true</skipTests>
                    <includes>
                        <include>**/*Test.java</include>
                    </includes>
                    <useModulePath>false</useModulePath>
                </configuration>
            </plugin>
            

        </plugins>
    </build>
</project>